apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-web
  labels:
    app: {{ .Release.Name }}-{{ .Chart.Name }}-web
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.api.web.maxunavilable }}
      maxSurge: {{ .Values.api.web.maxsurge }}
  revisionHistoryLimit: {{ .Values.api.web.revisionLimit }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Chart.Name }}-web
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Chart.Name }}-web
    spec:
      containers:
      - name: web-svc
        image: {{ .Values.api.web.image.name }}:{{ .Values.api.web.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.api.web.port }}
          name: http
        env:
          - name: EMOJISVC_HOST
            value: {{ .Release.Name }}-emoji-svc:8081
          - name: VOTINGSVC_HOST
            value: {{ .Release.Name }}-voting-svc:8082
          - name: INDEX_BUNDLE
            value: {{ .Values.api.web.image.index_bundle }}
          - name: WEB_PORT
            value: {{ .Values.api.web.port | quote }}
        resources:
          requests:
            memory: {{ .Values.api.web.requests.memory | quote }}
            cpu: {{ .Values.api.web.requests.cpu | quote }}
          limits:
            memory: {{ .Values.api.web.limits.memory | quote }}
            cpu: {{ .Values.api.web.limits.cpu | quote }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.api.web.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: {{ .Values.api.web.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-web
spec:
  type: NodePort
  selector:
    app: {{ .Release.Name }}-{{ .Chart.Name }}-web
  ports:
  - name: http
    port: 80
    targetPort: {{ .Values.api.web.port }}
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-web
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}-{{ .Chart.Name }}-web
  minReplicas: {{ .Values.api.web.hpa.minReplicas }}
  maxReplicas: {{ .Values.api.web.hpa.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 90
